#artifacts, output, depedency caching

name: artifacts
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: get code
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.tmp
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: install dependencies
        working-directory: ./react_sample
        run: npm install
      - name: lint code
        working-directory: ./react_sample
        run: npm run lint
      - name: test code
        working-directory: ./react_sample
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      #stepのidとkey_nameを使ってoutput
      script-file: ${{steps.publish.outputs.script-file}}
    steps:
      - name: get code
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.tmp
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: install dependencies
        working-directory: ./react_sample
        run: npm install
      - name: build
        working-directory: ./react_sample
        run: npm run build
      - name: publish JS filename
        working-directory: ./react_sample
        id: publish
        #{key_name}={value}として$GITHUB_OUTPUTに流す
        #最後のセミコロンは-execdirに必要なもの
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}'>>$GITHUB_OUTPUT ';'
      - name: upload artifacts
        #usesとworking-directoryは併用不可
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: ./react_sample/dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: get build artifact
        #artifactを受け取る
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: output contentes
        run: ls
      - name: output filename
        #他のjobからの受け取り
        #needsが必須
        run: echo ${{needs.build.outputs.script-file}}
      - name: deploy
        run: echo "deploying..."
